{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomePost = function HomePost() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedImage = _useState2[0],\n    setSelectedImage = _useState2[1];\n  var navigation = useNavigation();\n  var selectImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        console.log('Permission to access the camera roll is required!');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync();\n      if (result.canceled === false) {\n        if (result.assets && result.assets.length > 0) {\n          var selectedAsset = result.assets[0];\n          var source = {\n            uri: selectedAsset.uri\n          };\n          setSelectedImage(source);\n        }\n      }\n    });\n    return function selectImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getStarted = function getStarted() {\n    if (selectedImage) {\n      var newPost = {\n        id: new Date().getTime().toString(),\n        username: 'Stanley Kapapa',\n        image: selectedImage\n      };\n      navigation.navigate('Home', {\n        newPost: newPost\n      });\n    } else {\n      console.warn('Please select an image before getting started.');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"What's Your New Image?\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: selectImage,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add Image\"\n      })\n    }), selectedImage && _jsx(Image, {\n      source: selectedImage,\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.getStartedButton,\n      onPress: getStarted,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Get Started\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 34,\n    marginBottom: 50,\n    fontWeight: 'bold'\n  },\n  addButton: {\n    marginTop: 20,\n    backgroundColor: 'gray',\n    paddingVertical: 90,\n    paddingHorizontal: 70,\n    borderRadius: 25\n  },\n  getStartedButton: {\n    marginTop: 20,\n    backgroundColor: 'green',\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    borderRadius: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  }\n});\nexport default HomePost;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Image","ImagePicker","useNavigation","jsx","_jsx","jsxs","_jsxs","HomePost","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","navigation","selectImage","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","console","log","result","launchImageLibraryAsync","canceled","assets","length","selectedAsset","source","uri","apply","arguments","getStarted","newPost","id","Date","getTime","toString","username","image","navigate","warn","style","styles","container","children","heading","addButton","onPress","buttonText","width","height","getStartedButton","create","flex","justifyContent","alignItems","fontSize","marginBottom","fontWeight","marginTop","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","color"],"sources":["C:/Users/kunya/ikt205g23v/stuspace/Screens/HomePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst HomePost = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  const selectImage = async () => {\r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      console.log('Permission to access the camera roll is required!');\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchImageLibraryAsync();\r\n\r\n    if (result.canceled === false) {\r\n      if (result.assets && result.assets.length > 0) {\r\n        const selectedAsset = result.assets[0]; \r\n        const source = { uri: selectedAsset.uri };\r\n\r\n        setSelectedImage(source);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getStarted = () => {\r\n    if (selectedImage) {\r\n      const newPost = {\r\n        id: new Date().getTime().toString(),\r\n        username: 'Stanley Kapapa', \r\n        image: selectedImage,\r\n      };\r\n\r\n      // Navigate to the Home screen and pass the new post\r\n      navigation.navigate('Home', { newPost });\r\n    } else {\r\n      // Handle case where no image is selected\r\n      console.warn('Please select an image before getting started.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style = {styles.heading}>What's Your New Image?</Text>\r\n      <TouchableOpacity style={styles.addButton} onPress={selectImage}>\r\n        <Text style={styles.buttonText}>Add Image</Text>\r\n      </TouchableOpacity>\r\n      {selectedImage && (\r\n        <Image source={selectedImage} style={{ width: 200, height: 200 }} />\r\n      )}\r\n      <TouchableOpacity style={styles.getStartedButton} onPress={getStarted}>\r\n        <Text style={styles.buttonText}>Get Started</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({  \r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n    \r\n  },\r\n  heading: {\r\n    fontSize: 34,\r\n    marginBottom: 50,\r\n    fontWeight: 'bold',\r\n  },\r\n  addButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'gray',\r\n    paddingVertical: 90,\r\n    paddingHorizontal: 70,\r\n    borderRadius: 25,\r\n  },\r\n  getStartedButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'green',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default HomePost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}