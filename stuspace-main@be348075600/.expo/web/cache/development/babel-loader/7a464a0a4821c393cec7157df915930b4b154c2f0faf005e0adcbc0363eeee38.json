{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Profile = function Profile() {\n  var navigation = useNavigation();\n  var user = {\n    name: 'John Doe',\n    profilePicture: require(\"../assets/images/post1.png\")\n  };\n  var handleLogout = function handleLogout() {\n    navigation.navigate('GetStarted');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.profileContainer,\n      children: [_jsx(Image, {\n        source: user.profilePicture,\n        style: styles.profilePicture\n      }), _jsx(Text, {\n        style: styles.userName,\n        children: user.name\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: handleLogout,\n      children: _jsx(Text, {\n        style: styles.logoutButtonText,\n        children: \"Log out\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 50\n  },\n  profileContainer: {\n    alignItems: 'center'\n  },\n  profilePicture: {\n    width: 110,\n    height: 110,\n    borderRadius: 75,\n    marginBottom: 20\n  },\n  userName: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  logoutButton: {\n    marginTop: 20,\n    paddingVertical: 7,\n    paddingHorizontal: 25,\n    backgroundColor: 'green',\n    borderRadius: 45\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default Profile;","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","TouchableOpacity","useNavigation","jsx","_jsx","jsxs","_jsxs","Profile","navigation","user","name","profilePicture","require","handleLogout","navigate","style","styles","container","children","profileContainer","source","userName","logoutButton","onPress","logoutButtonText","create","flex","justifyContent","alignItems","paddingTop","width","height","borderRadius","marginBottom","fontSize","fontWeight","marginTop","paddingVertical","paddingHorizontal","backgroundColor","color"],"sources":["C:/Users/kunya/ikt205g23v/stuspace/Screens/Profile.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Profile = () => {\r\n  const navigation = useNavigation();\r\n\r\n  // Sample user data\r\n  const user = {\r\n    name: 'John Doe',\r\n    profilePicture: require('../assets/images/post1.png'), \r\n  };\r\n \r\n\r\n  const handleLogout = () => {\r\n    // Perform logout actions here\r\n    // For example, navigate to the GetStarted screen\r\n    navigation.navigate('GetStarted');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.profileContainer}>\r\n        <Image source={user.profilePicture} style={styles.profilePicture} />\r\n        <Text style={styles.userName}>{user.name}</Text>\r\n      </View>\r\n      <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n        <Text style={styles.logoutButtonText}>Log out</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    paddingTop: 50, \r\n  },\r\n  profileContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  profilePicture: {\r\n    width: 110,\r\n    height: 110,\r\n    borderRadius: 75, \r\n    marginBottom: 20,\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  logoutButton: {\r\n    marginTop: 20,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 25,\r\n    backgroundColor: 'green',\r\n    borderRadius: 45,\r\n  },\r\n  logoutButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Profile;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAGlC,IAAMO,IAAI,GAAG;IACXC,IAAI,EAAE,UAAU;IAChBC,cAAc,EAAEC,OAAO,6BAA6B;EACtD,CAAC;EAGD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAGzBL,UAAU,CAACM,QAAQ,CAAC,YAAY,CAAC;EACnC,CAAC;EAED,OACER,KAAA,CAACT,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BZ,KAAA,CAACT,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACG,gBAAiB;MAAAD,QAAA,GACnCd,IAAA,CAACJ,KAAK;QAACoB,MAAM,EAAEX,IAAI,CAACE,cAAe;QAACI,KAAK,EAAEC,MAAM,CAACL;MAAe,CAAE,CAAC,EACpEP,IAAA,CAACN,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACK,QAAS;QAAAH,QAAA,EAAET,IAAI,CAACC;MAAI,CAAO,CAAC;IAAA,CAC5C,CAAC,EACPN,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACM,YAAa;MAACC,OAAO,EAAEV,YAAa;MAAAK,QAAA,EAClEd,IAAA,CAACN,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACQ,gBAAiB;QAAAN,QAAA,EAAC;MAAO,CAAM;IAAC,CACpC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGjB,UAAU,CAAC0B,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE;EACd,CAAC;EACDV,gBAAgB,EAAE;IAChBS,UAAU,EAAE;EACd,CAAC;EACDjB,cAAc,EAAE;IACdmB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDZ,QAAQ,EAAE;IACRa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,YAAY,EAAE;IACZc,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,OAAO;IACxBP,YAAY,EAAE;EAChB,CAAC;EACDR,gBAAgB,EAAE;IAChBgB,KAAK,EAAE,OAAO;IACdL,UAAU,EAAE,MAAM;IAClBD,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe3B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}