{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GroupChat = function GroupChat() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var sendMessage = function sendMessage() {\n    if (inputText.trim() !== '') {\n      setMessages([].concat(_toConsumableArray(messages), [{\n        id: messages.length + 1,\n        text: inputText\n      }]));\n      setInputText('');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: styles.messageContainer,\n          children: _jsx(Text, {\n            style: styles.messageText,\n            children: item.text\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: inputText,\n        onChangeText: function onChangeText(text) {\n          return setInputText(text);\n        },\n        placeholder: \"Type your message...\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: sendMessage,\n        children: _jsx(Text, {\n          style: styles.sendButtonText,\n          children: \"Send\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#fff'\n  },\n  messageContainer: {\n    padding: 10,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  messageText: {\n    fontSize: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#ccc',\n    paddingTop: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginRight: 10\n  },\n  sendButton: {\n    backgroundColor: 'blue',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 20\n  },\n  sendButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default GroupChat;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","GroupChat","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","inputText","setInputText","sendMessage","trim","concat","_toConsumableArray","id","length","text","style","styles","container","children","data","keyExtractor","item","toString","renderItem","_ref","messageContainer","messageText","inputContainer","input","value","onChangeText","placeholder","sendButton","onPress","sendButtonText","create","flex","padding","backgroundColor","borderRadius","marginBottom","fontSize","flexDirection","alignItems","borderTopWidth","borderTopColor","paddingTop","borderWidth","borderColor","paddingHorizontal","paddingVertical","marginRight","color","fontWeight"],"sources":["C:/Users/kunya/ikt205g23v/stuspace/Screens/GroupChat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\n\r\nconst GroupChat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  const sendMessage = () => {\r\n    if (inputText.trim() !== '') {\r\n      setMessages([...messages, { id: messages.length + 1, text: inputText }]);\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.messageContainer}>\r\n            <Text style={styles.messageText}>{item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={inputText}\r\n          onChangeText={(text) => setInputText(text)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <TouchableOpacity style={styles.sendButton} onPress={sendMessage}>\r\n          <Text style={styles.sendButtonText}>Send</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#fff',\r\n  },\r\n  messageContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#ccc',\r\n    paddingTop: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 20,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    marginRight: 10,\r\n  },\r\n  sendButton: {\r\n    backgroundColor: 'blue',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 20,\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default GroupChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}